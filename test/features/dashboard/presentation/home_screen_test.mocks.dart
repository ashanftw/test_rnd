// Mocks generated by Mockito 5.3.2 from annotations
// in test_rnd/test/features/dashboard/presentation/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:test_rnd/core/network_manager.dart' as _i3;
import 'package:test_rnd/features/dashboard/data/models/product.dart' as _i4;

import 'home_screen_test.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNetworkManager_1 extends _i1.SmartFake
    implements _i3.NetworkManager {
  _FakeNetworkManager_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductData_2 extends _i1.SmartFake implements _i4.ProductData {
  _FakeProductData_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MockProductRemoteData].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockProductRemoteData extends _i1.Mock
    implements _i5.MockProductRemoteData {
  MockMockProductRemoteData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);
  @override
  set client(_i2.Client? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.NetworkManager get networkManager => (super.noSuchMethod(
        Invocation.getter(#networkManager),
        returnValue: _FakeNetworkManager_1(
          this,
          Invocation.getter(#networkManager),
        ),
      ) as _i3.NetworkManager);
  @override
  set networkManager(_i3.NetworkManager? _networkManager) => super.noSuchMethod(
        Invocation.setter(
          #networkManager,
          _networkManager,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i4.ProductData> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue: _i6.Future<_i4.ProductData>.value(_FakeProductData_2(
          this,
          Invocation.method(
            #getProducts,
            [],
          ),
        )),
      ) as _i6.Future<_i4.ProductData>);
}
